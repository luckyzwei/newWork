<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of GroupProduct
 *
 * @author wangxiangshuai
 */
class GroupProduct extends CI_Controller {

    //put your code here
    public function __construct() {
        parent::__construct();
        $this->load->model("GroupProductModel");
        $this->load->model('GroupOrder');
        $this->load->helper("string");
    }

    /**
     * 获取拼团商品
     */
    public function get_groupproducts() {
        $page = $this->input->post('page') ? $this->input->post('page') : 1;
        $limit = $this->input->post('limit') ? $this->input->post('limit') : 10;

        $groupproductList = $this->GroupProductModel->getGroupProducts($page, $limit);

        foreach ($groupproductList as &$product) {
            $product['thumb'] = reduce_double_slashes($this->systemsetting->get("img_url") . $this->systemsetting->get("file_upload_dir") . $product['thumb']);
        }

        $this->output->set_content_type("application/json")->set_output(json_encode(array('data' => $groupproductList, 'error_code' => 0)));
    }

    public function get_groupproduct() {
        $group_product_id = $this->input->post("group_product_id");
        $groupproduct = $this->GroupProductModel->getGroupProduct($group_product_id);
        if (!empty($groupproduct)) {
            $groupproduct['thumb'] = reduce_double_slashes($this->systemsetting->get("img_url") . $this->systemsetting->get("file_upload_dir") . $groupproduct['thumb']);
            $images = unserialize($groupproduct['images']);
            if (!empty($images)) {
                $groupproduct['images'] = array();
                foreach ($images as $value) {
                    $groupproduct['images'][] = reduce_double_slashes($this->systemsetting->get("img_url") . $this->systemsetting->get("file_upload_dir") . $value);
                }
            }
            if (empty($groupproduct['endtime'])) {
                $groupproduct['endtime'] = 260000;
            } else {
                $groupproduct['endtime'] -= time();
            }
        }
        $this->output->set_content_type("application/json")->set_output(json_encode(array('data' => $groupproduct, 'error_code' => 0)));
    }

    /**
     * 获取该商品未成团
     */
    public function get_grouplist() {
        $group_product_id = $this->input->post('group_product_id');
        $limit = $this->input->post('limit');
        $page = $this->input->post('page');
        $page = empty($page) ? 1 : $page;
        $limit = empty($limit) ? 3 : $limit;
        $grouplist = $this->GroupOrder->getGroupLits($group_product_id, $page, $limit);
        $this->output->set_content_type("application/json")->set_output(json_encode(array('data' => $grouplist, 'error_code' => 0)));
    }

    /**
     * 获取团详情
     */
    public function get_groupbuy() {
        $groupbuy_id = $this->input->post('groupbuy_id');
        $groupbuy = $this->GroupOrder->getGroupbuy($groupbuy_id);
        $this->output->set_content_type("application/json")->set_output(json_encode(array('data' => $groupbuy, 'error_code' => 0)));
    }

    /**
     * 检查开团数据
     */
    public function check_group() {
        $error_code = 0;
        $data = array();
        $this->load->model('addressModel');
        $group_product_id = $this->input->post("group_product_id");
        $groupbuy_id = $this->input->post('groupbuy_id');
        $address_id = $this->input->post('address_id');
        $product_number = $this->input->post('product_number');
        //这里检查团详情
        if (!empty($groupbuy_id)) {
            $groupbuy = $this->GroupOrder->getGroupbuy($groupbuy_id);
        }
        $groupproduct = $this->GroupProductModel->getGroupProduct($group_product_id);
        if (empty($groupproduct)) {
            $data = "活动已结束";
            $error_code = 1;
        }
        if ($groupproduct['group_product_store'] < 1) {
            $error_code = 1;
            $data = '库存不足';
        }
        if (empty($error_code)) {
            $data['products'] = array(
                'thumb' => reduce_double_slashes($this->systemsetting->get("img_url") . $this->systemsetting->get("file_upload_dir") . $groupproduct['thumb']),
                'product_name' => $groupproduct['product_name'],
                'product_price' => $groupproduct['group_product_price'],
                'product_number' => $product_number
            );
            $shipping_fee = 0;
            $user_id = $this->session->user_id;
            $address = $this->addressModel->getAddressInfo($user_id, $address_id);
            $config = $this->systemsetting->get("shipping_fee_template");
            if (!$config) {//不启用运费模板
                $shipping_fee = $this->systemsetting->get("shipping_fee");
            }
            if ($config) {
                //根据区域id获取当前区域的运费配置
                $logistic_config = $this->addressModel->getLogisticsList($address['district_id']);
                if (empty($logistic_config)) {//没有配置区域运费使用系统默认统一运费
                    $shipping_fee = $this->systemsetting->get("shipping_fee");
                } else {
                    $lconfig = $logistic_config[0];
                    $product_weight = $groupproduct['product_weight'] * $product_number / 1000;
                    $overstep_weight = $product_weight - $lconfig['logistics_weight'];
                    if ($overstep_weight <= 0) {
                        $shipping_fee = $lconfig['logistics_fee'];
                    } else {
                        $shipping_fee = $lconfig['logistics_fee'] + ceil($overstep_weight) * $lconfig['logistics_add_fee'];
                    }
                }
            } else {
                $shipping_fee = $this->systemsetting->get("shipping_fee");
            }
            $data['coupon'] = array();
            $data['check_marketings'] = '';
            $total_price = $groupproduct['group_product_price'] * $product_number;
            $data['product_price'] = round($total_price, 2);
            $data['cuca'] = 0;
            $data['shipping_fee'] = round($shipping_fee, 2);
            $data['coupon_discount'] = 0;
            $data['total_amount'] = $data['total_price'] = round($total_price + $shipping_fee, 2); //订单总计金额
        }
        $json = array("error_code" => $error_code, 'data' => $data);
        $this->output->set_content_type("application/json")->set_output(json_encode($json));
    }

}
