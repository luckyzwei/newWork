<?php/** * 店铺列表模型 * @package    ZMshop * @author liuchenwei@hnzhimo.com * @copyright  2018 河南知默网络科技有限公司 * @link   http://www.hnzhimo.com * @since  Version 1.0.0 */class StoreModel extends CI_Model {    //获取店铺列表    public function getList($where = array(), $page = 1, $limit = 20) {        $this->db->select('*')->from('store');        if ($where) {            $this->db->or_like(array('store_name' => $where['store_name']));        }        $count_db = clone($this->db);        $rownum = $count_db->count_all_results();        $query = $this->db->select("store.*,user.user_name,store.store_name")                ->join("user", "store.store_uid=user.user_id", "left")                ->limit($limit, ($page - 1) * $limit)                ->order_by("store_id desc")                ->get();        $info = $query->result_array();        //获取店铺上级名称        foreach ($info as $key => $value) {            $da = $this->db->select('store_name')->from('store')->where(array("store_uid" => $value['store_pid']))->get()->result_array();            foreach ($da as $k => $v) {                $info[$key]['store_ming'] = $v['store_name'];            }        }        return array("count" => $rownum, "result" => $info);    }    //执行操作管理店铺    public function update($data, $where) {        return $this->db->update('store', $data, $where);    }    //根据执行条件查询店铺信息    public function sel($store_id) {        $query = $this->db->get_where("store", array("store_id" => $store_id));        return $query->row_array();    }    /**     * 店铺订单列表     * @param type $page     * @param type $limit     * @param type $where     * @param type $store_id     * @return type     */    public function storeOrderList($page = 1, $limit = 20, $where, $store_id) {        $store_uid = $this->getUserIdByStoreId($store_id);        $this->db->select('o.order_id,o.order_sn,o.pay_money,o.user_id,o.status,o.order_type,o.createtime,o.order_amount')->from('order o')->where('o.from_id=' . $store_uid);        if (!empty($where['createtime']) && !empty($where['stoptime'])) {            $this->db->where('o.paytime >= ', strtotime($where['createtime'])) && $this->db->where('o.paytime <= ', strtotime($where['stoptime']));        }        if (!empty($where['createtime']) && empty($where['stoptime'])) {            $this->db->where('o.paytime >= ', strtotime($where['createtime']));        }        $count_db = clone($this->db);        $rownum = $count_db->count_all_results();        $query = $this->db                ->select('u.nickname,u.user_name')                ->join('user u', 'u.user_id=o.user_id', 'left')                ->order_by('o.order_id', 'DESC')                ->limit($limit, ($page - 1) * $limit)                ->get();          return array("count" => $rownum, "result" => $query->result_array());    }    /*     * 根据店铺id获取所有子店铺信息     */    public function getSubStore($page = 1, $limit = 20, $where = [], $store_id = 0) {        $store_info=$this->sel($store_id);                $this->db                ->from('store s')                ->join('user u', 's.store_uid=u.user_id', 'left')                ->select('s.*,u.user_name')                ->where('s.store_pid=' . $store_info['store_uid']);        if (!empty($where['store_name'])) {            $this->db->like('s.store_name', $where['store_name'], 'both');        }        $count_db = clone($this->db);        $rownum = $count_db->count_all_results();                $res = $this->db                ->order_by('store_id', 'DESC')                ->limit($limit, ($page - 1) * $limit)                ->get()                ->result_array();        return array("count" => $rownum, "result" => $res);    }    /*     * 通过店铺id获取用户id     */    public function getUserIdByStoreId($store_id) {        $res = $this->db                ->from('store s')                ->join('user u', 'u.user_id=s.store_uid', 'left')                ->where('s.store_id=' . $store_id)                ->select('u.user_id')                ->get()                ->row_array();        return $res['user_id'];    }    /*     * 根据用户id获取店铺id     * 祖    2018/8/8     */    public function getStoreIdByUserId($user_id) {        $res = $this->db                ->from('store')                ->where('store_uid=' . $user_id)                ->select('store_id')                ->get()                ->row_array();        return $res['store_id'];    }    /**     * 删除店铺信息     * @param $store_id 店铺id     */    public function deleteStore($store_id) {        //删除店铺商品信息        $this->db->where("store_id", $store_id)->delete("store_product");        return $this->db->where("store_id", $store_id)->delete("store");    }}